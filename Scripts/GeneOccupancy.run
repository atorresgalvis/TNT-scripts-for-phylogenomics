macro - ;
macro [ 10000  ;
macro * 10 10000 ; 
macro = ;
					/* HELP OF THE SCRIPT AT THE END OF THE FILE */
taxname [ 30 ;
set 0 ntax + 1; if ('0' == 0) xread/ 10 10 4;  end
var: bloque                      contargs
     ctos                        ctos_sp 
     dde                         dofile 
     fin                         helped 
     min_occu_bl                 min_occu_sp 
     nuact                       occu 
     occu_bl                     occu_sp 
     pace_x                      pace_y 
     parce                       pos 
     pos_x                       pos_y 
     star                        star_b 
     star_x                      star_y 
     tot_hig                     tot_width
     bl_name[100]                miss_x_bl[(nblocks+1)]
     miss_x_sp[(ntax+1)]         ord_miss_x_sp[(ntax+1)] 
     ord_miss_x_bl[(nblocks+1)]
     ; 
report - ; 
silent = all ; 
tables / 7 ;
macfloat 7 ; 
macreport - ;
report - ;
warn- ; 
cls ; clbuffer ;
silent - all ;
if (!argnumber)
	lquote = ; lquote [ ;
	quote WARNING: arguments of the script were not indicated by the user&46&10 ;
	quote Running the script with arguments by default &40species &61&32 0 and genes &61&32 0&41&46 &10 ;
	quote Use &34run GeneOccupancy&46run help&59&34&32 for help&46&10 ;
	lquote - ;
	set min_occu_bl 0 ; 
	set min_occu_sp 0 ;
else
	set helped 0 ;
	if ((argnumber == 1) && (eqstring [ %1 help ])) 
		goto = %0 ;
		goto AYUDA ;
	end
	if ('helped' == 1)
		macreport - ;
		report = ;
		macro - ;
		silent - all ;
		procedure / ;
	end
	silent - all;
	lquote = ; lquote [ ;
	quote WARNING: keep in mind that the script GeneOccupancy&46run has two optional arguments (genes and species).&10 ;
	quote &32         Every word or number other than the allowed arguments and options will be skipped during the execution.&10 ;
	quote &32         Be sure that you are running the script properly (use &34run GeneOccupancy&46run help&59&34&32 for help).&10 ;
	quote &10 ;
	lquote - ;
	silent = all;
	if (argnumber < 2)
		lquote = ; lquote [ ;
		errmsg &10Arguments are not well indicated (use &34run GeneOccupancy&46run help&59&34&32 for help) &10&10 ;
		lquote - ;      
	end 
	set contargs 0 ;
	loop=parseo 1 argnumber
		if ('contargs' > 1)
			endloop ;
		else	
			if ( eqstring [ %(#parseo) species ] )
				set parce #parseo + 1 ;
				set min_occu_sp %('parce') ;
				set contargs ++ ;
			else 
				if ( eqstring [ %(#parseo) genes ] )
					set parce #parseo + 1 ;
					set min_occu_bl %('parce') ;
					set contargs ++ ;
				end
			end
		end
	stop
end
silent = all ;

if ('min_occu_sp'== 0  && 'min_occu_sp' == 0 )
	set dofile 0 ; 
else
	set dofile 1 ; 
end

set star_x 250 ; 
set star_y 115 ; 
set pace_x 16 ; 
set pace_y 17 ; 
set tot_width nblocks * 'pace_x' + 'star_x' + 100 ; 
set tot_hig (ntax + 1 ) * 'pace_y' + 'star_y' + 100 ;  
silent = all ; 
 
loop 1 nblocks 
	loop 0 ntax 
		set miss_x_sp[#2] 0  ; 
		set miss_x_bl[#1] 0  ;
		set ord_miss_x_sp [#2] 0 ; 
		set ord_miss_x_bl [#1] 0 ; 
	stop
stop 

loop 1 nblocks 
	loop 0 ntax 
		if (!taxinblock[#2 #1])
			set miss_x_sp[#2]++ ; 
			set miss_x_bl[#1]++ ; 
		end
	stop
stop 
QUOTE BLOQUE ; 
loop 0 nblocks 
	quote #1 'miss_x_bl[#1]' ; 
stop
lquote ; 
lquote [ ; 


set ord_miss_x_sp sortlist [miss_x_sp (ntax+1) ] ; 
set ord_miss_x_bl sortlist [miss_x_bl (nblocks+1) ] ; 
QUOTE ordenadno sp ; 
loop 0 ntax 
	quote 'ord_miss_x_sp[#1]' 'miss_x_sp['ord_miss_x_sp[#1]']' ; 
stop
quote ---- ;
quote ordenando bloques ;
quote aca ; 
loop 0 nblocks 
	quote 'ord_miss_x_bl[#1]' 'miss_x_bl['ord_miss_x_bl[#1]']' ; 
stop 

log GeneOccupancy_Sp'min_occu_sp'_Gen'min_occu_bl'.svg ; 
silent - file ; 
quote <svg width=&34  'tot_width'&34  height= &34 'tot_hig' &34  xmlns=&34 http://www.w3.org/2000/svg&34> &10 ;

set ctos  0 ; 
loop 0 nblocks
	set bloque  'ord_miss_x_bl[#1]' ; 
	if ('bloque' == 0 ) continue ; end ;  
	set bl_name $$block 'bloque' ;
	set pos_x  'star_x' + ('pace_x' * 'ctos' ) ;   
	set occu_sp 'miss_x_bl['ord_miss_x_bl[#1]']' ; 
	set occu_sp 100 - ('occu_sp'/(ntax+1) * 100) ; 
	macfloat 1 ; 
	quote <text x=&34 'pos_x'&34 &32y=&34 'star_y'&34&32 font-size=&34 12&34&32  transform=&34 rotate (-45,'pos_x','star_y')&34 > 'ord_miss_x_bl[#1]'_$bl_name  &32&32  ('occu_sp') </text> &10 ; 
	macfloat 7 ; 
	set ctos ++ ; 
stop 
set star_y 'star_y' + 17 ; 
set ctos_sp 0 ; 
loop 0 ntax
	set bl_name $$taxon 'ord_miss_x_sp[#1]' ;
	set pos_y  'star_y' + ('pace_y' * 'ctos_sp' )  ; 
	set occu_sp 'miss_x_sp['ord_miss_x_sp[#1]']' ; 
	set occu_sp 100 - ('occu_sp'/nblocks * 100) ; 
	macfloat 1 ; 
	quote <text x=&34 5&34&32y=&34 'pos_y'&34&32 font-size=&34 12&34&32 > ('occu_sp') &32 'ord_miss_x_sp[#1]'_$bl_name  </text> &10 ;  
	macfloat 7 ; 
	set star_b 'star_x' - 10 ; 
	set pos_y 'pos_y' - 12 ; 
	set dde 0 ; 
	loop 0 nblocks
		set bloque 'ord_miss_x_bl[#2]' ; 
		if ('bloque' == 0 ) continue ; end;  
		set pos_x 'star_b' + ('pace_x' * 'dde' ) ; 
		if (taxinblock['ord_miss_x_sp[#1]' 'bloque'])
			quote <rect x=&34 'pos_x'&34&32  y=&34 'pos_y'&34&32 width=&34 15 &34&32 height=&34 15&34&32  style=&34 fill:red &34 />   &10; 
		else
			quote <rect x=&34 'pos_x'&34&32  y=&34 'pos_y'&34&32 width=&34 15 &34&32 height=&34 15&34&32  style=&34 fill:lightgray &34 />  &10;  
		end
		set dde ++ ; 
	stop
	set ctos_sp ++ ; 
stop

/* GENERATING NEW DATAMATRIX */ 
set nuact ntax + 1 ; 
macfloat 7 ; 
silent = all ; 
if(dofile)
	loop 0 ntax
		set occu 100 - (('miss_x_sp[#1]'/(nblocks)) * 100) ; 
		if ('occu'< 'min_occu_sp')
			if('nuact' == 4 )
				silent - console ; errmsg Less than 4 taxa with gene occupancy satisfies the threshold indicated (%i). Please change the threshold ; silent = all ; 
			end  
			if(#1 != outgroup ) 
				taxc -  #1 ; 
				set nuact-- ; 
			else
				silent - console ; errmsg Outgroup has an Occupancy ('occu') lower than the threshold indicated. Please select another taxa for outgroup or modify threshold) ; silent = console ;
			end
		end
	stop
end	 
set pos_y 'star_y' + ('pace_y' * 'nuact' ) -13 ; 
set nuact nblocks ; 
loop 0 nblocks
	set occu 100 - (('miss_x_bl[#1]'/(ntax+1)) * 100) ; 
	if ('occu'< 'min_occu_bl')
		set fin blockend [#1] ; 
		set star blockstart [#1] ; 
		cc ] 'star'.'fin' ;  
		set nuact-- ; 
	end 
stop 
set pos_x 'star_x' + ('pace_x' * 'nuact' ) - 11  ; 
set star_y 'star_y' - 13 ; 
silent - file ; quote <line x1=&34 5&34&32 y1=&34 'pos_y'&34&32 x2=&34 'pos_x'&34&32 y2=&34 'pos_y'&34&32 stroke=&34 black &34&32 stroke-width = &34 3 &34&32 /> &10;  silent = all ; 
silent - file ; quote <line x1=&34 'pos_x'&34&32  y1=&34 'star_y'&34&32  x2=&34 'pos_x'&34&32 y2=&34 'pos_y'&34&32 stroke=&34 black &34&32 stroke-width= &34 3 &34&32 /> &10;  silent = all ; 
silent - file ; quote </svg> ; silent = all ; 
log / ;
silent = all ; silent - file ; 
log GeneOccupancy_Sp'min_occu_sp'_Gen'min_occu_bl'.tnt ;  
xread -  ; 
quote ., ;
silent - file ; quote cnames &10 ; silent = all ; 
loop 1 nblocks
	set occu 100 - (('miss_x_bl[#1]'/(ntax + 1)) * 100) ; 
	if ('occu'>= 'min_occu_bl')
		set bl_name $$block #1 ;
		macreport - ; silent = all ; 
		if ( eqstring[ $block:5 #1 block ] )
			silent - file ; quote &91 #1   $block:5 #1_#1  ., &10 ; silent = all ; 
		else
			silent - file ; quote &91 #1   $bl_name  ., &10 ; silent = all ; 
		end
	end
stop 
silent - file ; quote  ., ; silent = all ; 
log / ;
report - ;
lquote = ; lquote [ ; silent - all ;
quote &10;
quote The script GeneOccupancy.run was successfully run with the following settings: species &61&32 'min_occu_bl' and genes &61&32 'min_occu_sp'&46 &10 ;
quote Produced output files: GeneOccu'min_occu_bl'_SpecOccu'min_occu_bl'.tnt and GeneOccupancy.svg. &10 ;
quote IMPORTANT. Avoid overwriting of files: change the name of the produced output files in your directory before running the script again. &10 ;
quote &10;
silent = all ;
lquote - ;	
macreport - ;
report = ;
macro - ;
silent - all ;
warn=; 
procedure / ; 


label AYUDA ;
lquote = ; lquote [ ;
cls ; clbuffer ;
silent - all ;
/* =======================  HELP OF THE SCRIPT  ======================= */	
quote
&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61
TNT script:  GeneOccupancy.run                                                              
Updated:     2021-03-09.                                                                 
Author:      Santiago A. Catalano, Ambrosio Torres and Pablo A. Goloboff.                                                        
Mantainer:   Santiago A. Catalano. <sacatalano@gmail.com>                              
Depends:     TNT version 1.5 
             (Goloboff and Catalano, 2016. doi: 10.1111/cla.12160).      
License:     GPL (3). Citation: Torres et al. 2021 (Cladistics)                          
Description: Generates submatrices including only taxa or genes with (or 
             above) a level of occupancy, defined by the user. Two 
             different conditions can be determined, alone or combined: 
             (i) percentage of genes a species must present 
             to be included (ii) percentage of species a gene must present to be 
             included. Both values are indicated as arguments. If 
             the user is interested in only one of the conditions use 0 
             as value for the other argument. Notice that these two 
             values are calculated from the complete matrix (i.e. 
             without considering exclusion by the other condition). 
             Alternatively, the user may prefer to run the analysis 
             prioritizing one of the factors, and subsequently use the 
             matrix generated to apply the second criterion. The matrix 
             generated includes block names, if defined in the original 
             file. If blocks were unnamed, the new matrix will use the 
             numbering of each block in the original file as block name. 
             The script also produces an SVG file with a graphical 
             representation of the presence/absence of each gene for 
             each species. Within the SVG file, genes and species are 
             ordered by decreasing value of occupancy. In addition, 
             black lines indicate the taxon/gene sampling in the matrix 
             generated. The dataset must have been read into TNT before 
             executing the script.                                                          
Usage:       run GeneOccupancy.run  species 60 genes 70 &59                  
Arguments:   species  (optional&59&32 default is 0) include species that  
                      have S percent of gene with data (0-100).
             genes    (optional&59&32 default is 0) include genes that 
                      have G perecent of species with data (0-100).
Notes:       to generate only the svg file, run the script without 
             arguments (or with arguments &34species&32 0&32genes&32 0&34).
&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61
&10;
lquote - ;
silent = all ;
if(windows)
else
	view;
end
set helped 1 ;
procedure / ;
/* ==================================================================== */
