macro = ;
					/* HELP OF THE SCRIPT AT THE END OF THE FILE */
macreport - ; 
report - ; 
silent = all ;
cls ; clbuffer ; xwipe ;
var: arg_one[10]       arg_two[10]
	 arg_thr[10]       ext[3]
	 gename[300]       output_file[50]
	 caras             contargs
	 cual              dde 
	 doremo            guichnum
	 helped            i
	 isgappy           isprot
	 j                 lala
	 parce             spec_num
	 typedial          vta
	 xinfo
     ;
taxname +300;
set + ; 
set spec_num 0 ; 
set isprot 0 ; 
set output_file 0 ; 
set isgappy 0 ; 
set typedial 0 ;
set doremo 1 ; 
set output_file $concatenated.tnt ; 
if (windows && (argnumber == 0)) 
	opendlg 100 100 520 270 Compile genes... ; 
		frame   5 5 250 85  ;
		frame   260 5 250 85 ;
		frame   260 85 250 100 ;
		frame   5 85 250 60  ;
	showtxt 12 14 200 15 Type of data;
	choose isprot 15 32 200 20 Nucleotides
				  15 52 200 20 Amino acids ;
	showtxt 262 14 200 15 Treatment of gaps ; 
	choose isgappy 270 32 150 20 Missing
				   270 52 200 20 As additional state ;    
	showtxt 262 97 150 15 Total number of species  ; 
	choose spec_num  270 110 200 20 Specify number of species 
					+  spin 4 32767 guichnum 280 132 120 20 ; =   
					270 160 230 20 Use number of sp. from first block ;
	choose doremo 270 185 230 20 Remove uninformative characters ;			 
	showtxt 12 95 200 20 Name of output file ;
	gettxt output_file 20 117 200 20  ;
	frame   5 140 250 95  ;
	showtxt 12 150 150 20 Type of file ;
	choose  typedial 20 170 150 20 Fasta
			20 190 150 20 TNT    
			20 210 150 20 Nexus ;		
	closedlg ;
	if (!exstatus)
		sil-all; quote Procedure cancelled ; 
		procedure / ; 
	end 
	if ('typedial' == 0) 
		set ext $fas ; 
	else
		if ('typedial' == 1 ) 
			set ext $tnt ; 
		else
			set ext $nex ; 
		end
	end
else
	if (!argnumber)
		lquote = ; lquote [ ;
		errmsg &10&10 Must indicate all arguments to run the script (use &34run CompileGenes&46run help&59&34&32 for help). &10&10 ;
		lquote - ;      
	end
	set helped 0 ;
	if ((argnumber == 1) && (eqstring [ %1 help ])) 
		goto = %0 ;
		goto AYUDA ;
	end
	if ('helped' == 1)
		macreport - ;
		report = ;
		macro - ;
		silent - all ;
		procedure / ;
	end
	if (argnumber < 6)
		lquote = ; lquote [ ;
		errmsg &10&10Must indicate all arguments to run the script (use &34run CompileGenes&46run help&59&34&32 for help). &10&10 ;
		lquote - ;      
	end
	set contargs 0 ;
	set output_file $concatenated.tnt ;
	silent - all;
	lquote = ; lquote [ ;
	quote WARNING: keep in mind that the script CompilesGenes.run requires at least three arguments (format, type and species).&10 ;
	quote &32         Three optional arguments (output, gaps and noinfo) could be added.&10;
	quote &32         Every word or number other than the allowed arguments and options will be skipped during the execution.&10 ;
	quote &32         Be sure that you are running the script properly (use &34run CompileGenes&46run help&59&34&32 for help).&10 ;
	quote &10 ;
	lquote - ;
	silent = all;
	loop=parseo 1 argnumber
		if ('contargs' > 5)
			endloop ;
		else
			if ( eqstring [ %(#parseo) format ] )
				set parce #parseo + 1 ;
				if ( (eqstring [ %('parce') fas ]) | (eqstring [ %('parce') tnt ]) | (eqstring [ %('parce') nex ])) 
					set arg_one $%('parce') ;
					set contargs ++ ;
				else
					lquote = ; lquote [ ;
					errmsg &10&10 ERROR: option &34%('parce')&34&32 is not valid for the argument format. Valid options are &34fas&34, &34tnt&34&32 or &34nex&34. &10
						&32 &32 &32 &32 &32 &32 &32  Use &34run CompileGenes&46run help&59&34&32 for help. &10&10 ;
					lquote - ;
				end	
			else	
				if ( eqstring [ %(#parseo) type ] )
					set parce #parseo + 1 ;
					if ( (eqstring [ %('parce') prot ]) | (eqstring [ %('parce') dna ]))
						set arg_two $%('parce') ;
						set contargs ++ ;
					else
						lquote = ; lquote [ ;
						errmsg &10&10 ERROR: option &34%('parce')&34&32 is not valid for the argument type. Valid options are &34prot&34&32 or &34dna&34. &10
							&32 &32 &32 &32 &32 &32 &32  Use &34run CompileGenes&46run help&59&34&32 for help. &10&10 ;
						lquote - ;
					end	
				else
					if ( eqstring [ %(#parseo) output ] )
						set parce #parseo + 1 ;
						set output_file $%('parce') ;
						set contargs ++ ;
					else
						if ( eqstring [ %(#parseo) species ] )
							set parce #parseo + 1 ;		 
							set arg_thr %('parce') ;
							set contargs ++ ;
							set guichnum 'arg_thr' ;
						else
							if ( eqstring [ %(#parseo) gaps ] )
								set parce #parseo + 1 ;
								if ( (eqstring [ %('parce') miss ]) | (eqstring [ %('parce') new ]))		 
									if (eqstring [ %('parce') miss ])
										set isgappy 0 ;
									else
										set isgappy 1 ;
									end
									set contargs ++ ;
								else
									lquote = ; lquote [ ;
									errmsg &10&10 ERROR: option &34%('parce')&34&32 is not valid for the argument gaps. Valid options are &34miss&34&32 or &34new&34. &10
										&32 &32 &32 &32 &32 &32 &32  Use &34run CompileGenes&46run help&59&34&32 for help. &10&10 ;
									lquote - ;
								end	
							else
								if ( eqstring [ %(#parseo) noinfo ] )
									set parce #parseo + 1 ;
									if ( (eqstring [ %('parce') yes ]) | (eqstring [ %('parce') no ]))		 
										if (eqstring [ %('parce') yes ])
											set doremo 0 ;
										else
											set doremo 1 ;
										end
										set contargs ++ ;
									else
										lquote = ; lquote [ ;
										errmsg &10&10 ERROR: option &34%('parce')&34&32 is not valid for the argument noinfo. Valid options are &34yes&34&32 or &34no&34. &10
											&32 &32 &32 &32 &32 &32 &32  Use &34run CompileGenes&46run help&59&34&32 for help. &10&10 ;
										lquote - ;
									end
								end	
							end
						end	
					end
				end		
			end
		end
	stop 	
	if (isinstring [ fas $arg_one] )
	        costs <;
		set ext $fas ; 
		set cual 0 ; 
	else
		if (isinstring [ tnt $arg_one])
		        costs <;
			set ext $tnt ;
			set cual 1 ; 
		else 
			if (isinstring [ nex $arg_one])
				set ext $nex ; 
				set cual 2  ; 
			end
		end
	end
	if (isinstring [ prot $arg_two ] )
		set isprot 1 ; 
	else
		if (isinstring [ dna $arg_two])
			set isprot 0 ; 
		end 
	end  
end

if ('isprot' ) 
	nstates prot ;
else
	nstates dna ; 
end 
if ('spec_num' == 1 )
	forfiles *.$ext
		set gename $$curfile ;
		if (isinstring [ fas $ext ])
			procedure &$gename ;
		else
			procedure $gename ;
		end
		set guichnum ntax + 1 ; 
		killfiles; 
	stop
end
set caras 0 ;
set lala 0 ; 
forfiles *.$ext
	if ('isgappy')
		nstates gaps ; 
	else
		nstates nogaps ; 
	end
	set gename $$curfile   ;
	if (isinstring [ fas $ext ])
		procedure &$gename ;
	else
		procedure $gename ;
	end
	if ('doremo' == 0)
		set xinfo 0 ;
		loop=tixi 0 nchar
			if ( isinfo [#tixi] )
				set xinfo ++ ;
			end
		stop
		set caras 'caras' + 'xinfo' ; 
	else
		set caras 'caras' + nchar + 1 ;
	end
stop
set vta 0;
silent = all ;  
log $output_file ;  
silent - file ;  quote mxram [ .,   ; silent = all ;  

forfiles *.$ext
	set gename $$curfile ;
	if (isinstring [$gename  $output_file])
		continue 
	end  
	if ('vta' == 0 ) 
		if ('isprot')
			silent - file ; quote nstates prot ., ; silent = all ;  
		else 
			silent - file ; quote nstates DNA.,  ; silent = all ;
		end
		if ('isgappy')
			silent - file ; quote nstates gaps ., ; silent = all ; 
		else
			silent - file ; quote nstates nogaps .,; silent = all ; 
		end
		nstates gaps ; 
		silent - file ; quote xread 'caras' 'guichnum' ; silent = all ; 
	end
	if ('isgappy')
		nstates gaps ; 
	else
		nstates nogaps ; 
	end
	if (isinstring [ fas $ext])
		procedure &$gename ;
	else
		procedure $gename ;
	end
	if ('isprot') 
		silent - file ; quote &[prot /$gename ] ; silent = all ; 
	else
		silent - file ; quote &[DNA /$gename ] ; silent = all ; 
	end
	silent - file ; 
	if ('doremo' == 0)
		log /;
		silent = file ; xinact ; silent - file ;
		log temp.tnt; xread -; quote ., procedure /., ; log /;
		procedure temp.tnt;
		log + $output_file ;		
		xread ! ;
	else
		xread ! ;
	end
	silent = all ;
	set vta ++ ; 
stop 
set vta 0 ; 
silent - file ; quote ., ; silent = all ;
silent - file ; quote ., procedure / ., ; silent = all ;
log / ; 
silent - all ;
quote ;
quote The script CompileGenes.run was successfully run with the following settings: ;
if ('cual' == 0)
	quote  -Compiling Fasta files. ;
else
	if ('cual' == 1) 
		quote -Compiling TNT files. ;  
	else
		quote -Compiling Nexus files. ;  
	end
end
if ('isprot') 
	quote -Reading data as aminoacids. ;  
else
	quote -Reading data as nucleotides. ;  
end
if ('isgappy') 
	quote -Gaps treated as new state. ;  
else
	quote -Gaps treated as missing. ;  
end
if ('spec_num') 
	quote -Total number of species defined from first block: 'guichnum'. ;  
else
	quote -Total number of species defined by the user: 'guichnum'. ;  
end
if ('doremo' == 0) 
	quote -Uninformative characters were removed. ;
	if (windows)
		quote Note: a temporary file (temp.tnt) was created during the process. Feel free to remove it from your working directory/folder. ;  
	else
		system rm temp.tnt;
	end
end
quote -Dataset generated: $output_file ; 
macreport - ;
report = ;
macro - ;
silent - all ;
procedure / ;


label AYUDA ;
lquote = ; lquote [ ;
silent - all ;
cls ; clbuffer ;
/* =======================  HELP OF THE SCRIPT  ======================= */	
quote
&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61
TNT script:  CompileGenes.run                                                              
Updated:     2021-01-30.                                                                 
Author:      Santiago A. Catalano, Ambrosio Torres and Pablo A. Goloboff.                                                        
Mantainer:   Santiago A. Catalano. <sacatalano@gmail.com>                              
Depends:     TNT version 1.5 
             (Goloboff and Catalano, 2016. doi: 10.1111/cla.12160).      
License:     GPL (3). Citation: Torres et al. 2021 (Cladistics)                          
Description: This script concatenates data files into a single matrix in 
             TNT format. The script can merge fasta, nexus (non- 
             interleaved) and TNT files, though only one format at a 
             time. The script determines the format of the input files 
             from the file extensions (*.fas, *.nex, and *.tnt). No 
             other extensions are allowed. When the script is run from 
             the TNT Windows GUI version, a dialog box is opened to 
             define the settings. In command-driven versions, the script 
             must be run with arguments (see below). The script can 
             parse aminoacid and nucleotide sequences, but only one type 
             of data at a time. To combine aminoacids and nucleotides in 
             the same file, the script can be run separately for each 
             type of data, then merging both generated TNT-format files 
             with the native TNT command for merging data files (merge). 
             The same approach can be followed to combine nexus, fasta 
             and tnt files.                                                        
Usage:       run CompileGenes&46run format tnt type dna species 45 
                       output concatenated.tnt noinfo no gaps miss&59                  
Arguments:   format   format of the input files (&34fas&34&32 for Fasta, 
                      &34tnt&34&32 for TNT and &34nex&34&32 for Nexus files).                                                             
             type     data type (&34prot&34&32 for amino acids and 
                      &34dna&34&32 for nucleotides).             
             species  total number of species. If not sure, you can 
                      indicate a value larger than the dataset may have. 
                      After concatenating the file, reading it with TNT 
                      will indicate the correct number of taxa&59&32 it is 
                      advisable to edit the datafile (with a text 
                      editor) and correct the number of taxa (that 
                      saves memory in TNT).
             output   (optional) name of the output file.
             noinfo   (optional) remotion of uninformative characters.
                      Use &34yes&34&32 or &34no&34 (default). 
                      for treat the gaps as a new character state).
             gaps     (optional) treatment of the gaps (&34miss&34&32
                      for treat the gaps as missing entries [default]&59&32 
                      &34new&34&32 for treat the gaps as a new character state).                                                           
&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61
&10 ;
lquote - ;
silent = all ;
set helped 1 ;
if (windows)
else
	view ;
end
procedure / ;
/* ==================================================================== */ 
