macro - ;
macreport - ; 
report - ; 
macro [ 10000 ; 
macro *20 20000 ; 
macro = ; 				/* HELP OF THE SCRIPT AT THE END OF THE FILE */
 
xwipe ; piwe - ;
goto = %0 ;
cls ; clbuffer; 
warn- ; 
var:     
        alto[4]           ancho[4] 
       arg_one[10]       arg_two[10] 
       arg_thr[10]       gename[30] 
       input_file[50]    output_consense[30] 
       output_file[50]   output_mpts[30] 
       output_new[30]
       output_svg[30]    start_x[4]
       start_y[4]        zbusqueda[100]
       zgaps[100]        znew[100] 
       zpesos[100]       zratio[100] 
       zvalue[100]
       a                 altotot 
       anchotot          b 
       caras             contargs 
       donewick          dosvg 
       guchisch          guichschlvl 
       guichpiwe         guichval 
       helped            hmrepls
       isgappy           ispiwe 
       isprot            iswith_k 
       k                 kval 
       las               lis
       lolim             n 
       nval              parce 
       r                 ris 
       savempts          savNelsen 
       size_tot          spec_num
       uplim             which_str 
       whichwt           antipiwe
       origlev           jold
       ultimo            dnw
       nuhits            tofit          
       round             pace 
       wwww              zratchet
       myout[100]        newi[30]
       tmp [30]
       ;
taxname = ; 
taxname +200 ;
costs < ; 
mxram [ ;
/*set + ;*/ 
set - ; /*ojooooo */ 
set jold 1000 ; 
set spec_num 33 ; 
set isprot 0 ; 
set isgappy 0 ; 
set size_tot 1; 
set ispiwe 0 ; 
set guichpiwe 2 ;  
set guichval 1 ; 
set kval 5 ; 
set nval 15 ;  
set guchisch 0 ; 
set guichschlvl 1 ; 
set hmrepls 2 ; 
set savNelsen 1 ;  
set donewick 0 ; 
set dosvg 1 ; 
set savempts 1 ; 
set antipiwe 1 ; 
set input_file $Concatenated.tnt; 
set output_consense $StrictConsensus; 
set output_mpts $MPT_trees; 
set output_svg $StrictConsensus.svg;
set myout $Default; 
set nuhits 1 ; 
set round 0 ; 
if (windows && (argnumber == 0))
	set ancho[0] 375 ; set ancho [1] 375 ; 
	set ancho[2] 375 ; set ancho [3] 375 ; 
	set alto[0] 170 ; set alto [1]  140 ; 
	set alto[2] 180 ; set alto [3] 210 ; 
	set start_x[0] 8 ; set start_x [1] 390 ; 
	set start_x[2] 8 ; set start_x [3] 390 ; 
	set start_y[0] 8 ; set start_y [1] 8 ; 
	set start_y[2] 175 ; set start_y[3] 145 ; 
	set anchotot 780 ; 
	set altotot 430 ; 
	getfname input_file read CHOOSE DATAFILE  ; 
	opendlg 50 50 'anchotot' 'altotot' Phylogenomic search... ;
	
	frame   'start_x[0]' 'start_y[0]' 'ancho[0]' 'alto[0]'  ;
	showtxt ('start_x[0]' + 8)  ('start_y[0]'+ 10) 390 20 Name of TNT input file ;
	gettxt input_file ('start_x[0]' + 15) ('start_y[0]'+ 30) 350 20  ;
	
	showtxt ('start_x[0]' + 8)  ('start_y[0]'+ 55)  150 20 Gap treatment ;
	choose isgappy ('start_x[0]' + 15) ('start_y[0]'+ 75)  150 20 Missing
					('start_x[0]' + 15) ('start_y[0]'+ 95) 300 20 As additional state ; 
	showtxt ('start_x[0]'+8) ('start_y[0]'+120) 300 25 Outgroup  ; 
	gettxt myout ('start_x[0]' + 20) ('start_y[0]'+ 140)  150 20	; 		
	frame   'start_x[1]' 'start_y[1]' 'ancho[1]' 'alto[1]' ;
	showtxt ('start_x[1]'+5) ('start_y[1]'+12) 300 25 Weighting against homoplasy ; 
	choose antipiwe ('start_x[1]' + 12) ('start_y[1]'+ 50)  300 20 Implied weighting  
						+ subdlg ('start_x[1]' + 25) ('start_y[1]'+ 80) 200 20 Define settings ;
							290 175 450 290  Settings ; 
							showtxt 7 7 290 15 Choose weighting scheme  ; 
							choose guichpiwe 10 27 290 15 Weight by gene (extended implied weighting)
							10 57 290 15 Weight by 1st,2nd,3rd positions (extended implied weighting)
							10 87 290 15 Weight individual sites (implied weighting) ;
			showtxt 7 107 290 15 Strength weighting against homoplasy  ; 
			choose guichval 11 130 11 11 . 
								+ showtxt       140 130 250 30 Defined by a K value (concavity value) 
								spin 1 99 kval  37 127 20 20 ;=
							11 167 11 11 . ;
						+ showtxt 140 167 250 40 Defined by N value (accepted range of weights)
							spin 2 50 nval  37 167 20 20 ;=
						closedlg ; =
	         	('start_x[1]' + 12) ('start_y[1]'+ 30)  250 20 Use equal weighting  ; 
		
	frame   'start_x[2]' 'start_y[2]' 'ancho[2]' 'alto[2]' ;   
		showtxt ('start_x[2]' + 8)  ('start_y[2]'+ 10)  150 20 Search settings ;
		choose guchisch ('start_x[2]' + 8) ('start_y[2]'+ 35) 200 15 New technology search  
						+ spin 0 10 guichschlvl  ('start_x[2]' + 55) ('start_y[2]'+ 55) 50 20 Level  ;
						  spin 1 5 nuhits  ('start_x[2]' + 55) ('start_y[2]'+ 80) 50 20 Hits  ;
						=
					('start_x[2]' + 8) ('start_y[2]'+ 105) 300 15 Traditional search (Wag+TBR); 
						+ spin 0 10 hmrepls  ('start_x[2]' + 55) ('start_y[2]'+ 135) 50 20 Level;=
		
		frame   'start_x[3]' 'start_y[3]' 'ancho[3]' 'alto[3]' ;                    
		check savempts ('start_x[3]' + 8)  ('start_y[3]'+ 15)  330 20 Save best trees in a file ;
					+  gettxt output_mpts ('start_x[3]' + 20) ('start_y[3]'+ 45) 330 20  ;=
			check  savNelsen ('start_x[3]'+  8)  ('start_y[3]' + 75)  330 20 Calculate strict consensus and save it ;
		+gettxt output_consense ('start_x[3]' + 18) ('start_y[3]'+ 95) 330 20  ;
                check dosvg ('start_x[3]' + 8)  ('start_y[3]'+ 180)  300 20 Generate SVG with strict consensus topology ;=
       		
   		
		choose donewick    ( 'start_x[3]'  + 8) ('start_y[3]' + 120 )  300 30  Save trees in TNT format   
						( 'start_x[3]'  + 8) ('start_y[3]' + 142 )  300 30  Save trees in Newick format as well   ; 
	closedlg ;
	if (!exstatus)
		silent - all ; quote Procedure cancelled ; 
		procedure / ; 
	end 
else
	silent - all ;
	if (!argnumber)
		lquote = ; lquote [ ;
		quote Use &34run PhylogenomicSearches&46run help&59&34&32 for help&46&10 ;
		lquote - ;
		errmsg No arguments were indicated by the user. 
		The script requires at least one argument to run: the name of the input file. ;
	end
	set helped 0;
	if ((argnumber == 1) && (eqstring [ %1 help ])) 
		goto = %0 ;
		goto AYUDA ;
	end
	if ('helped' == 1)
		macreport - ;
		report = ;
		macro - ;
		silent - all ;
		procedure / ;
	end
	lquote = ; lquote [ ;
	quote WARNING: keep in mind that the script PhylogenomicSearch.run requires at least one argument (input).&10 ;
	quote &32         Eight optional arguments (search, level, hits, weights, strength, gaps, output and outgroup) could be added.&10;
	quote &32         Every word or number other than the allowed arguments and options will be skipped during the execution.&10 ;
	quote &32         Be sure that you are running the script properly (use &34run PhylogenomicSearch&46run help&59&34&32 for help).&10 ;
	quote &10 ;
	lquote - ;
	if ((argnumber == 2) && (eqstring [ %1 input ]))
		set input_file $%2 ;
		set guchisch 0 ;		
		set ispiwe 0 ;		
		set guichschlvl 1 ;
		set isgappy 0 ;
		set guichpiwe 3 ; 
		lquote = ; lquote [ ;
		quote WARNING:&10;
		quote &32&32&32&32Running the script with $input_file&32as input file.&10 ;
		quote &32&32&32&32Running with type of search by default &40&61New technology search&41&46 &10 ;
		quote &32&32&32&32Running with search level by default &40level &61&32 1&41&46 &10 ;
		quote &32&32&32&32&32 (Note: the argument level used in this script is different than &10;
	    quote &32&32&32&32&32 the option level of the native TNT command xmult) &10;
		quote &32&32&32&32Running with number of hits by default &40hits &61&32 1&41&46 &10 ;
		quote &32&32&32&32Running using weights by default &40weights &61&32 equal&41&46 &10 ;
		quote &32&32&32&32Running with gaps treatment by default &40gaps as missing&41&46 &10 ;
		quote &32&32&32&32Resulting trees saved in TNT format&46 &10 &10;
		lquote - ;
	end
	set zgaps $missing entries;
	set zbusqueda $new technology search ;
	set zpesos $equally weighted parsimony ;
	set zvalue 'kval' ;
	set znew $resulting trees saved as TNT format ;
	if (argnumber > 2)
		set contargs 0 ;
		loop=parseo 1 argnumber
			if ('contargs' > 8)
				endloop ;
			else	
				if (eqstring [ %(#parseo) input ])
					set parce #parseo + 1 ;
					set input_file $%('parce') ;
					set contargs ++ ;
				else 
					if (eqstring [ %(#parseo) level ])
						set parce #parseo + 1 ;
						set hmrepls %('parce') ;
						set guichschlvl %('parce') ;
						set contargs ++ ;
					else
						if (eqstring [ %(#parseo) hits ])
							set parce #parseo + 1 ;
							set nuhits %('parce') ;
							set contargs ++ ;
						else
							if (eqstring [ %(#parseo) search ])
								set parce #parseo + 1 ;
								set zbusqueda $new technology search ;
								if ( (eqstring [ %('parce') nt ]) | (eqstring [ %('parce') tra ])) 
									if (eqstring [ %('parce') tra ])
										set guchisch 1 ;
										set zbusqueda $traditional search ;
									end	
									set contargs ++ ;
								else
									lquote = ; lquote [ ;
									quote &32WARNING: option &34%('parce')&34&32 is not valid for the argument search. Valid options are &34nt&34&32 or &34tra&34. &10;
									quote &32 &32 &32 &32 &32 &32 &32 &32 &32 &32Hence, running with type of search by default &40&61New technology search&41&46 &10 ;
									quote &32 &32 &32 &32 &32 &32 &32 &32 &32 &32Use &34run PhylogenomicSearch&46run help&59&34&32 for help. &10&10 ;
									lquote - ;
								end
							else
								if (eqstring [ %(#parseo) weights ])
									set parce #parseo + 1 ;
									if ( (eqstring [ %('parce') equal ]) | 
										 (eqstring [ %('parce') k-sites ]) | (eqstring [ %('parce') k-blocks ]) | (eqstring [ %('parce') k-cp ]) | 
										 (eqstring [ %('parce') n-sites ]) | (eqstring [ %('parce') n-blocks ]) | (eqstring [ %('parce') n-cp ]) )
										if (eqstring [ %('parce') equal ])
											set guichpiwe 3 ;
											set ispiwe 0 ;
											set antipiwe 1;
										else
											set ispiwe 1;
											set antipiwe 0;
											set guichval 0 ;
											set zratio $(weights defined by a K value [Concavity value]);
											if (isinstring [ %('parce') n- ])
												set zvalue 'nval' ;
												set guichval 1;
												set zratio $(weights Defined by N value [Accepted range of weights]);
											end
											if (isinstring [ %('parce') blocks ])
												set ispiwe 1 ;
												set guichpiwe 0 ;
												set zpesos $extended implied weigthing by blocks (e.g. genes). See strength ;
											end
											if (isinstring [ %('parce') cp ])
												set ispiwe 1 ;
												set guichpiwe 1 ;
												set zpesos $extended implied weigthing by codon positions. See strength ;
											end
											if (isinstring [ %('parce') sites ])
												set ispiwe 1 ;
												set guichpiwe 2 ;
												set zpesos $implied weigthing by sites. See strength ;
											end
										end	
										set contargs ++ ;
									else
										lquote = ; lquote [ ;
										quote &32WARNING: option &34%('parce')&34&32 is not valid for the argument weights. Valid options are &34equal&34, &34k-sites&34, &34k-blocks&34, &34k-cp&34, &10;
										quote &32 &32 &32 &32 &32 &32 &32 &32 &32 &32&34n-sites&34, &34n-blocks&34&32 or &34n-cp&34. &10 ;
										quote &32 &32 &32 &32 &32 &32 &32 &32 &32 &32Hence, running using weights by default &40weights &61&32 equal&41&46 &10 ;
										quote &32 &32 &32 &32 &32 &32 &32 &32 &32 &32Use &34run PhylogenomicSearch&46run help&59&34&32 for help. &10&10 ;
										lquote - ;
									end
								else
									if (eqstring [ %(#parseo) strength ])
										set parce #parseo + 1 ;
										set zvalue %('parce') ;
										set kval %('parce') ;
										set nval %('parce') ;
										set contargs ++ ;
									else
										if (eqstring [ %(#parseo) output ])
											set parce #parseo + 1 ;
											set donewick 0; 
											if ( (eqstring [ %('parce') tnt ]) | (eqstring [ %('parce') newick ]))
												if (eqstring [ %('parce') newick ])
													set donewick 1;
													set znew $resulting trees saved in both, Newick and TNT formats;
												end
												set contargs ++ ;
											else
												lquote = ; lquote [ ;
												quote &32WARNING: option &34%('parce')&34&32 is not valid for the argument output. Valid options are &34tnt&34&32 or &34newick&34. &10;
												quote &32 &32 &32 &32 &32 &32 &32 &32 &32 &32Hence, resulting trees are saved in TNT format&46 &10 ;
												quote &32 &32 &32 &32 &32 &32 &32 &32 &32 &32Use &34run PhylogenomicSearch&46run help&59&34&32 for help. &10&10 ;
												lquote - ;
											end
										else
											if (eqstring [ %(#parseo) gaps ])
												set parce #parseo + 1 ;
												if ( (eqstring [ %('parce') miss ]) | (eqstring [ %('parce') new ]))
													if (eqstring [ %('parce') new ])
														set isgappy 1 ;
														set zgaps $a new state (e.g. 5th state for DNA) ;
													end	
													set contargs ++ ;
												else
													lquote = ; lquote [ ;
													quote &32WARNING: option &34%('parce')&34&32 is not valid for the argument gaps. Valid options are &34miss&34&32 or &34new&34. &10;
													quote &32 &32 &32 &32 &32 &32 &32 &32 &32 &32Hence, resulting trees are saved in TNT format&46 &10 ;
													quote &32 &32 &32 &32 &32 &32 &32 &32 &32 &32Use &34run PhylogenomicSearch&46run help&59&34&32 for help. &10&10 ;
													lquote - ;
												end
											else
												if (eqstring [ %(#parseo) outgroup ])
													set parce #parseo + 1 ;
													set myout $%('parce');
												end
											end
										end
									end
								end
							end
						end
					end
				end
			end
		stop
		lquote = ; lquote [ ;
		if ('contargs' == 8)
			quote Running the script with all the arguments indicated by the user&58 &10 ;
		else
			quote Running the script with 'contargs' arguments indicated by the user&58 &10 ;
		end
		quote &32&32&32&32Input file &61&32 $input_file &10;
		quote &32&32&32&32Type of search &61&32 $zbusqueda &10;
		quote &32&32&32&32Level of search &61&32 'guichschlvl' &10;
		quote &32&32&32&32&32 (Warning: the argument level used in this script is different than &10;
	    quote &32&32&32&32&32 the option level of the native TNT command xmult) &10;
		quote &32&32&32&32Number of hits &61&32 'nuhits' &10;
		quote &32&32&32&32Weighting against homoplasy &61&32 $zpesos &10;
		if ('ispiwe' == 1)
			quote &32&32&32&32Strength of weighting &61&32 'zvalue' $zratio &10;
		end
		quote &32&32&32&32Gaps are treated as $zgaps &10;
		quote &32&32&32&32Output &61&32 $znew &10;
		quote &32&32&32&32Outgroup &61&32 $myout &10 &10;
		lquote - ;
	end     
	set savNelsen 1 ; 
	set savempts 1 ; 
	set dosvg 1 ; 
end



/* DEFINE SETTINGS */ 
if ('antipiwe') 
 set ispiwe 0 ; 
else
 set ispiwe 1 ; 
end 

if ('isgappy' == 0) 
	nstates nogaps ; 
else
	nstates gaps ; 
end
if ('ispiwe' == 1) 
	piwe = ;
end 


/* READ DATASET */ 
procedure $input_file ; 
hold 'jold'/'jold' ;   

if (!(eqstring [ $myout Default ]))
  outgroup $myout ; 
end

/* DEFINE WEIGHTING */ 
if ('ispiwe' > 0)
 
	if ('guichpiwe' == 0)
		xpiwe = ;
		xpiwe ] ;  
	end
	if ('guichpiwe' == 1)
		xpiwe = ;
		xpiwe [ . /12:3 ;  
	end
	if ('guichpiwe' == 2)
		xpiwe - ;  
	end
	if ('guichval' == 1) 
		goto CALCULATE_R ; 
	else
		piwe = 'kval' ; 
	end 
end


/* PERFORM SEARCHES */ 
/* Drift modified accoding to the N° of chars */ 
 
set origlev 'hmrepls' ; 
if ('hmrepls' == 0)
	set hmrepls 1 ;
else
	set hmrepls ('hmrepls' * 10) ;
end
report = ; 
if ('guchisch' == 1 ) ; 
	mult = repl 'hmrepls' hold 3 ; 
else
	sectsch: slack 25; 
    if (nchar > 50000 ) 
      drift: noequals ; 
      if (nchar > 2000000) 
          drift: giveup 50 ; 
      else
        set pace 49 * ( (( (nchar +1 ) - 50000) / (2000000 - 5000)) )  ;
        set pace 99 - 'pace' ;  
        macfloat 0 ; 
        drift: giveup 'pace' ; 
        macfloat 3 ; 
       end
    else
      drift: giveup 99 ; 
    end 
    if ('ispiwe') 
       set wwww ((5/( 'kval' + 5 ))- (4/( 'kval' + 4 ))) ; 
       set tofit 'wwww' ; 
       if (nchar > 25000 ) 
         if (nchar > 250000) 
            set tofit 'wwww' * 100 ; 
         else
            set pace  99 * ((( (nchar + 1 ) - 25000) / (250000 - 25000))) ;   
            set tofit 'wwww' + ( 'wwww' * 'pace' )   ;      
         end
       end
    else
      if ( nchar < 25000) 
        set tofit 1 ; 
      else
        if (nchar > 250000 )
          set tofit 100 ; 
        else 
          set tofit  1 + (99 * ((( (nchar + 1 ) - 25000) / (250000 - 25000)))) ; 
        end 
      end 
    end 
  drift: fitdiff 'tofit' rfitdiff 0.1 ;
  goto nivel ;
  xmult = hits 'nuhits' ; 
end 

bbreak = fillonly ;
report- ;
lquote = ; lquote [ ;
quote &10 ;
lquote - ;
silent - all ;  quote The script PhylogenomiSearch.run was successfully run! ;
quote - Image file with consensus saved to $output_svg ;
silent = all ;

if (windows)
	sil-all ; quote - Input file: $input_file ; sil=all ;
	if ('isgappy')
	silent - all ; quote - Gaps are treated as missing ; silent = all ; 
	else
	silent - all ; quote - Gaps are treated as a different state ; silent = all ; 
	end
	if ('ispiwe')
	silent - all ; quote - Running using Implied Weighting ; silent - all ; 
	if ('guichpiwe' == 2 ) 
		silent - all ; quote - Weighting according the homoplasy of individual sites ; silent = all ; 
	end
	if ('guichpiwe' == 0 ) 
		silent - all ; quote - Weighting according to the average homoplasy of each gene (Extended Implied weighting) ; silent = all ; 
	end
	if ('guichpiwe' == 1 ) 
		silent - all ; quote - Weighting 1st,2nd and 3rd codon position according to the average homoplasy of each position (Extended Implied weighting) ; silent = all ; 
	end
	if ('guichval' == 0 ) 
		silent - all ; quote - Weighting strength using K = 'kval' ; silent = all ; 
	else
		if ('round' > 0 ) 
		silent - all ; quote - The k value calculated for the given range of weights ('nval') was higher than 1000 (TNT maximum) ; silent = all ; 
		silent - all ; quote  k value set to 1000 ; silent = all ; 
		else
		silent - all ; quote - Weighting strength using range N = 'nval' ; silent = all ; 
		end
	end
	else
	silent - all ; quote - Running under equal weighting ; silent = all ; 
	end
	if ('guchisch' == 1 ) ; 
	silent - all ; quote - Using level 'origlev' of Traditional Searches ; silent = all ; 
	else
	silent - all ; quote - Using level 'guichschlvl' of New Technology Search ; silent = all;
	silent - all ; quote Warning: the argument level used in this script is different than ; 
	               quote the option level of the native TNT command xmult. ; silent = all;
	silent - all ; quote - Number of hits: 'nuhits' ; silent = all;   
	
	end
end

/* GENERATE OUTPUT */ 

/*set tmp $$a; 
set a $$tmp $b; 
quote %1+%2: $a; */

set - ; 

if ('savempts')
    set dnw 1 ;
    if ('donewick')
      silent - all ; quote - Trees saved in TNT and Newick format ; silent = all ;
    else
      silent - all ; quote - Trees saved in TNT format ; silent = all ;
    end 
    set tmp $$output_mpts; 
    set newi $_tnt.tre;  
    set output_mpts $$tmp $newi;
    if ('donewick')
       tsave * $output_mpts; save ; tsave / ; 
       set newi $_newick.tre  ;
       set output_new $$tmp $newi; 
       export = $output_new ;
       silent - all ; quote - Most parsimonious trees saved to $output_mpts (TNT format) and $output_new (Newick format)  ; silent = all ; 
    else 
 	tsave * $output_mpts; save ; tsave / ; 
         silent - all ; quote - Most parsimonious trees saved to $output_mpts (TNT format) ; silent = all ; 
   end
end
 
if ( 'savNelsen' )
        if ('dnw' == 0 )
         if('donewick')
          silent - all ; quote - Trees saved in TNT and Newick format ; silent = all ;
         else
          silent - all ; quote - Trees saved in TNT format ; silent = all ;
         end
        end
        set ultimo ntrees  ; 
   	if (('ultimo'+1) == 'jold' ) 
   	 set ultimo ('ultimo' - 1) ; 
   	 tc 0.'ultimo' ; 
   	end
     	report= ;nelsen * ; report - ; ; 
   	set ultimo ntrees ; 
	silent - all ; quote - Keeping in memory all MPTs ('ultimo' trees) + strict consensus (last tree) ; silent = all ; 
	tvault > .  ;
	tc / ;  
	if ('dosvg')
	  ttags = ; ttags * 0 ; 
	  ttags & $output_svg ; 
        end
        set tmp $$output_consense; 
	set newi $_tnt.tre;  
	set output_consense $$tmp $newi ;
	if ('donewick')
	  tsave * $output_consense ; save ; tsave / ; 
	  set newi $_newick.tre;  
	  set output_new $$tmp $newi;
	  export = $output_new ; 
	  silent - all ; quote - Strict consensus saved to $output_consense (TNT format) and $output_new (Newick format); silent = all ; 
         else 
       	  tsave * $output_consense ; save ; tsave / ; 
      	  silent - all ; quote - Strict consensus saved to $output_consense (TNT format); silent = all ; 
 	end
   	k 0 ; 
	tvault < . ;
 else
	silent - all ; quote - Keeping in memory all MPTs  ; silent = all ; 
end

goto - ; 
ttags - ; 
macreport - ;
report = ;
macro - ;
silent - all ;
procedure / ; 
     

label CALCULATE_R
 set round 0 ;  
 if ('nval' < 1.5)
  errms Error! Give a weighing range value (N) larger than 1  ; 
 end 
set n -999999 ; 
loop=la 0 nchar 
	if ( 'n' < maxstepsact[#la] ) 
		set n maxstepsact[#la] ; 
	end 
stop 
set r 'nval' ;   /*   ***** THIS IS THE WEIGHT RANGE!!   ***  */ 
set k 20 ; 
set lolim 0.001 ; 
set uplim 10000 ; 
loop 1 1 
	set lis 1 / ( 'k' + 1 ) ; 
	set ris 'r' * 
	( ( 'k' / ( 'k' + 'n' ) ) - ( 'k' / ( 'k' + 'n' + 1 ) ) ) ; 
	if ( 'lis' == 'ris' ) 
		endloop ; 
	end
	if ( 'lis' > 'ris' ) 
		if ( 'lis' < ( 'ris' + 0.0001 ) )
			endloop;
		end 
		set lolim 'k' ; 
		set k ( 'k' + 'uplim' ) / 2 ; 
	else 
		if ( 'ris' < ( 'lis' + 0.0001) )
			endloop;
		end 
		set uplim 'k' ; 
		set k ( 'k' + 'lolim' ) / 2 ; 
	end 
	setloop 1 ; 
stop 
if ('k' > 1000) 
 set round 'k' ;
 set k 1000 ; 
end 
piwe = 'k' ; 
set kval 'k' ; 
procedure / ;


label nivel ;
if ('guichschlvl' > 10)
	errms ERROR: the maximum level of searching strength is 10.
	For help use: run PhylogenomicSearch.run help ;
end
if ( ('guichschlvl' == 0) | ('guichschlvl' == 1) | ('guichschlvl' == 2) )
	set zratchet ('guichschlvl' * 4) ;
	xmult: replications 5 fuse 3 ratchet 'zratchet' noxss rss css ;
else
	if ( ('guichschlvl' == 3) | ('guichschlvl' == 4) | ('guichschlvl' == 5) | ('guichschlvl' == 6) | ('guichschlvl' == 7) )
		set zratchet 10 + (('guichschlvl'-3) * 2) ;
		xmult: replications 8 fuse 6 ratchet 'zratchet' noxss rss css ;
	else
		if ( ('guichschlvl' == 8) | ('guichschlvl' == 9) | ('guichschlvl' == 10) )
			set zratchet 12 + (('guichschlvl'-3) * 2) ;
			xmult: replications 10 fuse 9 ratchet 'zratchet' noxss rss css ;
		end
	end
end
procedure / ;


label AYUDA ;
cls ; clbuffer ; 
lquote = ; lquote [ ;
silent - all ;
/* =======================  HELP OF THE SCRIPT  ======================= */	
quote
&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61
TNT script:  PhylogenomicSearch.run                                                              
Updated:     2021-03-09.                                                                 
Author:      Santiago A. Catalano, Ambrosio Torres and Pablo A. Goloboff.                                                        
Mantainer:   Santiago A. Catalano. <sacatalano@gmail.com>                              
Depends:     TNT version 1.5 
             (Goloboff and Catalano, 2016. doi: 10.1111/cla.12160).      
License:     GPL (3). Citation: Torres et al. 2021 (Cladistics)                          
Description: Performs phylogenetic inference for phylogenomic datasets. 
             Analyses can be run using various algorithms. In all cases 
             it is possible to define a level of search strength, from 0 
             to 10. If the New Technology option is chosen, it is also 
             possible to define the required number of hits to the 
             minimum length. The script also incorporates the 
             possibility of using different implied weighting schemes, 
             for individual sites, complete genes, or 1st, 2nd, and 3rd 
             positions collectively. The script also allows users to 
             define treatment of gaps in alignments, and format of 
             output files. When the script is run from TNT the Windows 
             GUI version, a dialog box is opened to define the settings. 
             In command-driven versions, the script must be run with 
             arguments.
Usage:       run PhylogenomicSearch.run input dataset.tnt search nt
             &32&32&32&32 level 2 hits 1 weights k-sites strength 12 
             &32&32&32&32 gaps miss output tnt outgroup dog &59                  
Arguments:   input    name of input file.
             search   (optional) type of search (&34nt&34&32 for New 
                      Techs. search and &34tra&34&32 for traditional search).
             level    (optional) level of searching strength (0-10). The 
                      fastest and least accurate is 0, the slowest and 
                      most accurate is 10.
             hits     (optional) number of hits to best length (1-5). 
                      The fastest and least accurate option is 1, the 
                      slowest and most accurate is 5.
             weights  (optional) weighting against homoplastic 
                      characters. With equal (=default), all characters 
                      have the same weight. &34k-sites&34&32 is used to weight 
                      the sites individually. &34k-blocks&34&32 is used to weight 
                      genes or blocks based on the average homoplasy of 
                      their characters (extended implied weighting by 
                      genes). &34k-cp&34&32 is used to weight codon positions 
                      based on their average homoplasy (extended implied 
                      weights by codon position). The concavity value k 
                      is defined with strength (see below). The user can 
                      also set k to a value such that the maximum 
                      possible ratio for the implied weights does not 
                      exceed a certain value (thus determining the 
                      acceptable range of weights&59 see Goloboff et al., 
                      2008b). For this, use &34n-&34&32 instead of &34k-&34&32 (e.g. 
                      &34n-blocks&34&32, &34n-sites&34&32 and &34n-cp&34). Keep in mind that if 
                      &34n-&34&32 is used, the value of the argument strength 
                      becomes the maximum possible ratio of weights n. 
                      Otherwise strength is the concavity value k per se. 
             strength (optional) the k (or n) value used when any kind 
                      of implied weighting scheme is performed. If 
                      equally weighted parsimony is used, this argument 
                      is skipped (default is 5 for k, and 15 for n).
             gaps     (optional) treatment of the gaps (&34miss&34&32
                      for treat the gaps as missing entries&59&32 &34new&34&32 
                      for treat the gaps as a new character state). 
             output   (optional) output format of the resulting 
                      trees (&34tnt&34&32 for TNT format and &34newick&34&32 
                      for Newick format as well). If not specified, default 
                      is TNT format.
             outgroup (optional) name of the taxon for the outgroup.
                      By default is the first taxon in the dataset.            
&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61&61
&10 ;
lquote - ;
silent = all ;
set helped 1;
if (windows)
else
	view ;
end
procedure / ;
/* ==================================================================== */
